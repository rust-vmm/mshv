name: Build & Test MSHV Crate
on: 
  pull_request:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build and test'
        required: true
        default: 'main'
jobs:
  infra-setup:
    name: MSHV Infra Setup
    uses: ./.github/workflows/mshv-infra.yaml
    with:
      ARCH: x86_64
      OS_DISK_SIZE: 512
      RG: MSHV-${{ github.run_id }}
      VM_SKU: Standard_D16s_v5
    secrets:
      MI_CLIENT_ID: ${{ secrets.MSHV_MI_CLIENT_ID }}
      RUNNER_RG: ${{ secrets.MSHV_RUNNER_RG }}
      RUNNER: ${{ secrets.MSHV_RUNNER }}
      STORAGE_ACCOUNT_PATHS: ${{ secrets.MSHV_STORAGE_ACCOUNT_PATHS }}
      X86_SOURCE_PATH: ${{ secrets.MSHV_X86_SOURCE_PATH }}
      USERNAME: ${{ secrets.MSHV_USERNAME }}

  build-test:
    name: Build & test
    needs: infra-setup
    if: ${{ always() && needs.infra-setup.result == 'success' }}
    runs-on:
      - self-hosted
      - Linux
    steps:
      - name: Determine branch to build
        run: |
          echo "Determining branch to build and test..."
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          else
            echo "BRANCH=${{ inputs.branch }}" >> $GITHUB_ENV
          fi

      - name: Build & Run tests on remote VM
        env:
          BRANCH_NAME: ${{ env.BRANCH }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PRIVATE_IP: ${{ needs.infra-setup.outputs.PRIVATE_IP }}
          RG: MSHV-${{ github.run_id }}
          USERNAME: ${{ secrets.MSHV_USERNAME }}
        run: |
          set -e
          echo "Connecting to the VM via SSH..."
          ssh -i ~/.ssh/azure_key -o StrictHostKeyChecking=no ${USERNAME}@${PRIVATE_IP} << EOF
            set -e
            echo "Logged in successfully."
            export PATH="\$HOME/.cargo/bin:\$PATH"
            echo "${BRANCH_NAME}"
            git clone --depth 1 --single-branch --branch "$BRANCH_NAME" https://github.com/rust-vmm/mshv.git
            cd mshv
            cargo build --all-features --workspace
            cargo test --all-features --workspace
          EOF
          echo "Build and test completed successfully."

  cleanup:
    name: Cleanup
    needs: build-test
    if: always()
    runs-on:
      - self-hosted
      - Linux
    steps:
      - name: Delete RG
        env:
          RG: MSHV-${{ github.run_id }}
        run: |
          if az group exists --name ${RG}; then
            az group delete --name ${RG} --yes --no-wait
          else
            echo "Resource Group ${RG} does not exist. Skipping deletion."
          fi
          echo "Cleanup process completed."

      - name: Delete SSH Key
        run: |
          if [ -f ~/.ssh/azure_key ]; then
            rm -f ~/.ssh/azure_key
            echo "SSH key deleted successfully."
          else
            echo "SSH key does not exist. Skipping deletion."
          fi
          echo "Cleanup process completed."